<?xml version ='1.0'?>
<sdf version ='1.4'>
  <world name='default'>
    <physics type='ode'>
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <real_time_update_rate>1000</real_time_update_rate>
      <gravity>0 0 0</gravity>
    </physics>

    <include>
      <uri>model://sun</uri>
    </include>

	<!-- scene -->
    <scene>
      <!--<ambient>0.1 0.1 0.1 1</ambient>-->
      <background>0.079 .285 .940 1</background>
      <shadows>0</shadows>
      <fog>
	<color>0.079 .285 .940 1</color>
	<type>linear</type>
	<start>1</start>
	<end>100</end>
	<density>50</density>
      </fog>
    </scene>
	<!-- scene done -->

	<!-- robot -->
    <model name="robot">

      <plugin name="robot" filename="librobot.so"></plugin>

      <static>false</static>
      <pose>-20.3 14 1 0 0 1.5</pose>

      <link name='body'>

      	<inertial>
      		<mass>700</mass>
      		<inertia>
      			<ixx>2008.867</ixx>
				<ixy>1.097</ixy>
				<ixz>-150.648</ixz>
				<iyy>3756.187</iyy>
				<iyz>11.587</iyz>
				<izz>3834.560</izz>      			
      		</inertia>
      	</inertial>
      		
		<collision name='collision'>
		  <geometry>
			<mesh>
			  <uri>file://../models/RobotColorGazebo.dae</uri>
			  <scale> .008 .008 .008</scale>
			</mesh>
		  </geometry>
		</collision>
		
		<visual name='visual'>
		  <geometry>
			<mesh>
			  <uri>file://../models/RobotColorGazebo.dae</uri>
			  <scale> .008 .008 .008</scale>
			</mesh>
		  </geometry>
		</visual>
      </link>

	<!-- imu 
      <joint name='imu' type='revolute'>
		<parent>body</parent>
		<child>imu_link</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>
	
	<link name='imu_link'>
	<pose>0 0.2 0 0 0 -1.507</pose>
      
      <inertial>
        <mass>0.1</mass>
      </inertial>
      
      <visual name="visual">
        <geometry>
          <box>
            <size>0.001 0.001 0.001</size>
          </box>
        </geometry>
      </visual>
      
      <collision name="collision">
        <geometry>
          <box>
            <size>0.001 0.001 0.001</size>
          </box>
        </geometry>
      </collision>
      
      <sensor name="imu" type="imu">
        <imu>
          <topic>simulator/imu</topic>
          <noise>
            <type>gaussian</type>
            <rate>
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </rate>
            <accel>
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </accel>
          </noise>
        </imu>
        <always_on>1</always_on>
        <update_rate>1000</update_rate>

	  <plugin name="imu_controller" filename="libgazebo_ros_imu.so">
		<alwaysOn>true</alwaysOn>
		<updateRate>50.0</updateRate> 
		<bodyName>imu_link</bodyName>
		<topicName>imu_data</topicName>
      </plugin>
      </sensor>	

    </link>
	 imu done -->

	  <!-- camera1 -->
      <joint name='camera1' type='revolute'>
		<parent>body</parent>
		<child>camera1_link</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      <link name='camera1_link'>
	<pose>0.1 0 0 0 0 -1.507</pose>

	<collision name='collision'>
	  <geometry>
	    <box>
	      <size>.03 .03 .03</size>
	    </box>
	  </geometry>
	</collision>

	<visual name='visual'>
	  <geometry>
	    <box>
	      <size>.03 .03 .03</size>
	    </box>
	  </geometry>
	</visual>

	<sensor type="camera" name="camera1">
	  <update_rate>300.0</update_rate>

	  <camera name="head">
	    <horizontal_fov>1.56079666</horizontal_fov>
	    <image>
	      <width>800</width>
	      <height>800</height>
	      <format>R8G8B8</format>
	    </image>
	    <clip>
	      <near>0.02</near>
	      <far>300</far>
	    </clip>
	    <noise>
	      <type>gaussian</type>-->
	      <mean>0.0</mean>
	      <stddev>0.007</stddev>
	    </noise>
	  </camera>

	  <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	    <alwaysOn>true</alwaysOn>
	    <updateRate>0.0</updateRate>
	    <cameraName>simulator/camera1</cameraName>
	    <imageTopicName>image_raw</imageTopicName>
	    <cameraInfoTopicName>camera1_info</cameraInfoTopicName>
	    <frameName>camera1_link</frameName>
	    <hackBaseline>0.07</hackBaseline>
	    <distortionK1>0.0</distortionK1>
	    <distortionK2>0.0</distortionK2>
	    <distortionK3>0.0</distortionK3>
	    <distortionT1>0.0</distortionT1>
	    <distortionT2>0.0</distortionT2>
	  </plugin>

	</sensor>

      </link>
	<!-- camera 1 done -->

	  <!-- camera 2 -->
      <joint name='camera2' type='revolute'>
		<parent>body</parent>
		<child>camera2_link</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      <link name='camera2_link'>
	<pose>-.1 0 0 0 0 -1.507</pose>

	<collision name='collision'>
	  <geometry>
	    <box>
	      <size>.03 .03 .03</size>
	    </box>
	  </geometry>
	</collision>

	<visual name='visual'>
	  <geometry>
	    <box>
	      <size>.03 .03 .03</size>
	    </box>
	  </geometry>
	</visual>

	<sensor type="camera" name="camera2">
	  <update_rate>300.0</update_rate>

	  <camera name="head">
	    <horizontal_fov>1.56079666</horizontal_fov>
	    <image>
	      <width>800</width>
	      <height>800</height>
	      <format>R8G8B8</format>
	    </image>
	    <clip>
	      <near>0.02</near>
	      <far>300</far>
	    </clip>
	    <noise>
	      <type>gaussian</type>-->
	      <mean>0.0</mean>
	      <stddev>0.007</stddev>
	    </noise>
	  </camera>

	  <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	    <alwaysOn>true</alwaysOn>
	    <updateRate>0.0</updateRate>
	    <cameraName>simulator/camera2</cameraName>
	    <imageTopicName>image_raw</imageTopicName>
	    <cameraInfoTopicName>camera2_info</cameraInfoTopicName>
	    <frameName>camera2_link</frameName>
	    <hackBaseline>0.07</hackBaseline>
	    <distortionK1>0.0</distortionK1>
	    <distortionK2>0.0</distortionK2>
	    <distortionK3>0.0</distortionK3>
	    <distortionT1>0.0</distortionT1>
	    <distortionT2>0.0</distortionT2>
	  </plugin>

	</sensor>
      </link>
	<!-- camera 2 done -->

	<!-- camera 3 (down) -->
      <joint name='camera3' type='revolute'>
		<parent>body</parent>
		<child>camera3_link</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      <link name='camera3_link'>
	<pose>0 .2 -.2 0 1.5 0</pose>

	<collision name='collision'>
	  <geometry>
	    <box>
	      <size>.03 .03 .03</size>
	    </box>
	  </geometry>
	</collision>

	<visual name='visual'>
	  <geometry>
	    <box>
	      <size>.03 .03 .03</size>
	    </box>
	  </geometry>
	</visual>

	<sensor type="camera" name="camera3">
	  <update_rate>300.0</update_rate>

	  <camera name="head">
	    <horizontal_fov>1.56079666</horizontal_fov>
	    <image>
	      <width>800</width>
	      <height>800</height>
	      <format>R8G8B8</format>
	    </image>
	    <clip>
	      <near>0.02</near>
	      <far>300</far>
	    </clip>
	    <noise>
	      <type>gaussian</type>-->
	      <mean>0.0</mean>
	      <stddev>0.007</stddev>
	    </noise>
	  </camera>

	  <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	    <alwaysOn>true</alwaysOn>
	    <updateRate>0.0</updateRate>
	    <cameraName>simulator/camera3</cameraName>
	    <imageTopicName>image_raw</imageTopicName>
	    <cameraInfoTopicName>camera3_info</cameraInfoTopicName>
	    <frameName>camera3_link</frameName>
	    <hackBaseline>0.07</hackBaseline>
	    <distortionK1>0.0</distortionK1>
	    <distortionK2>0.0</distortionK2>
	    <distortionK3>0.0</distortionK3>
	    <distortionT1>0.0</distortionT1>
	    <distortionT2>0.0</distortionT2>
	  </plugin>

	</sensor>
      </link>
      <!-- Camera 3 done -->

    </model>

	<!-- gate -->
    <model name="gate">
      <pose>0 0 1.5 1.5 0 0</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/GateColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/GateColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
      <plugin name="move_model" filename="libmove_model.so"></plugin>
    </model>
	<!-- gate done -->
	
	<!-- line1 -->
    <model name="line1">
      <pose>0 2 0 1.5707963 0 -.7</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>
	<!-- line1 done -->

	<!-- buoys -->

	<!-- red buoy -->
    <model name="redbuoy">
      <pose>-2.5 2.8 1.5 1.5707963 0 .7</pose>
      <static>false</static>
      <link name="body">
        <collision name="visual">
          <geometry>
            <mesh>
			  <uri>file://../models/RedBuoyColor.dae</uri>
			  <scale> .01 .01 .01</scale>
		    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
			  <uri>file://../models/RedBuoyColor.dae</uri>
			  <scale> .01 .01 .01</scale>
		    </mesh>
          </geometry>
        </visual>
      </link>
    </model>
    <!-- red buoy done -->
    
	<!-- green buoy -->
    <model name="greenbuoy">
      <pose>-2 3 1.5 1.5707963 0 .7</pose>
      <static>false</static>
      <link name="body">
        <collision name="visual">
          <geometry>
            <mesh>
			  <uri>file://../models/GreenBuoyColor.dae</uri>
			  <scale> .01 .01 .01</scale>
		    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
			  <uri>file://../models/GreenBuoyColor.dae</uri>
			  <scale> .01 .01 .01</scale>
		    </mesh>
          </geometry>
        </visual>
      </link>
    </model>
    <!-- green buoy done -->

	<!-- yellow buoy -->
    <model name="yellowbuoy">
      <pose>-3 2.6 1.5 1.5707963 0 .7</pose>
      <static>false</static>
      <link name="body">
        <collision name="visual">
          <geometry>
            <mesh>
			  <uri>file://../models/YellowBuoyColor.dae</uri>
			  <scale> .01 .01 .01</scale>
		    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
			  <uri>file://../models/YellowBuoyColor.dae</uri>
			  <scale> .01 .01 .01</scale>
		    </mesh>
          </geometry>
        </visual>
      </link>
    </model>
    <!-- yellow buoy done -->

	<!-- buoys done -->
	
	<!-- line2 -->
    <model name="line2">
      <pose>-4.5 4.8 0 1.5707963 0 2.8</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>
	<!-- line2 done -->
	
	<!-- mini gates -->
    <model name="minigate1">
      <pose>-10 7 0 1.5707963 0 1</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/TrafficLight.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/TrafficLight.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>

    </model>
	    <model name="minigate2">
      <pose>-12 9 0 1.5707963 0 1</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/TrafficLight.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/TrafficLight.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>

	<!-- mini gates done -->

	<!-- line3 -->
    <model name="line3">
      <pose>-13 11 0 1.5707963 0 -.7</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>
	<!-- line3 done -->

	<!-- line4 -->
    <model name="line4">
      <pose>-14.5 10 0 1.5707963 0 .7</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>
	<!-- line4 done -->
	
	<!-- bins -->

	<!-- bin 1 -->
    <model name="bin1">
      <pose>-20.3 14 0 0 0 1.5</pose>
      <static>false</static>
      <link name="body">
      
        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>
        
      </link>

      <joint name='bin1_image1' type='revolute'>
		<parent>body</parent>
		<child>image</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      
      <link name="image">
		<pose>0 0 0.05 0 0 0</pose>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/RoboSub37.dae</uri>
	      <scale> .03 .025 .01</scale>
	    </mesh>
          </geometry>
        </visual>
      </link>

    </model>
	<!-- bin 1 done -->

	<!-- bin 2 -->
    <model name="bin2">
      <pose>-20 13 0 0 0 1.5</pose>
      <static>false</static>
      <link name="body">
      
        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>
        
      </link>

      <joint name='bin2_image' type='revolute'>
		<parent>body</parent>
		<child>image</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      
      <link name="image">
		<pose>0 0 0.05 0 0 0</pose>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/RoboSub10.dae</uri>
	      <scale> .03 .025 .01</scale>
	    </mesh>
          </geometry>
        </visual>
      </link>

    </model>
	<!-- bin 2 done -->

	<!-- bin 3 -->
    <model name="bin3">
      <pose>-20 15 0 0 0 1.5</pose>
      <static>false</static>
      <link name="body">
      
        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>
        
      </link>

      <joint name='bin3_image' type='revolute'>
		<parent>body</parent>
		<child>image</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      
      <link name="image">
		<pose>0 0 0.05 0 0 0</pose>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/RoboSub98.dae</uri>
	      <scale> .03 .025 .01</scale>
	    </mesh>
          </geometry>
        </visual>
      </link>

    </model>
    <!-- bin 3 done -->

    <!-- bin 4 -->
    <model name="bin4">
      <pose>-20.3 16 0 0 0 1.5</pose>
      <static>false</static>
      <link name="body">
      
        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/BinColor1.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>
        
      </link>

      <joint name='bin4_image' type='revolute'>
		<parent>body</parent>
		<child>image</child>
		<axis>1 0 0</axis>
		<pose>0 0 0 0 0 0</pose>
      </joint>

      
      <link name="image">
		<pose>0 0 0.05 0 0 -1.5707963</pose>
      
        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/RoboSub16.dae</uri>
	      <scale> .03 .025 .01</scale>
	    </mesh>
          </geometry>
        </visual>
      </link>

    </model>
    <!-- bin 4 done -->

	<!-- torpedo target -->
    <model name="torpedo target">
      <pose>-22 20 2 0 0 1</pose>
      <static>false</static>
      <link name="body">
        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/TorpedoTargetsColors.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/TorpedoTargetsColors.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
      <plugin name="move_model" filename="libmove_model.so"></plugin>
    </model>
	<!-- torpedo target done -->
	
	<!-- line5 -->
    <model name="line5">
      <pose>-23 14 0 1.5707963 0 1.3</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>
	<!-- line5 done -->
	
	<!-- line6 -->
    <model name="line6">
      <pose>-23 15 0 1.5707963 0 .4</pose>
      <static>false</static>
      <link name="body">

        <collision name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </collision>

        <visual name="visual">
          <geometry>
            <mesh>
	      <uri>file://../models/PathColor.dae</uri>
	      <scale> .01 .01 .01</scale>
	    </mesh>
          </geometry>
        </visual>

      </link>
    </model>
	<!-- line6 done -->
	
	<plugin name="create_torpedo" filename="libcreate_torpedo.so"></plugin>
  </world>
</sdf>
